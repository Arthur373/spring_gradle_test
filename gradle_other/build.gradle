buildscript {
    apply from: 'http://gerrit.synisys.com/plugins/download-file/download?project=skynet-scripts&branch=master&file=src/main/gradle/build-configurator.gradle', to: buildscript
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.3'
        classpath "com.netflix.nebula:nebula-docker-plugin:2.0.9"
    }
}

plugins {
    id "org.sonarqube" version "2.2.1"
}

apply from: 'http://gerrit.synisys.com/plugins/download-file/download?project=skynet-scripts&branch=master&file=src/main/gradle/configurator.gradle', to: project


apply plugin: 'maven'
apply plugin: 'application'
apply plugin: 'com.bmuschko.docker-java-application'
apply plugin: 'nebula.docker'

group 'com.synisys.idm'
mainClassName = 'com.synisys.idm.cms.SSDServiceApplication'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

project.ext['groovy.version'] = '3.0.5'

dependencies {
    //auth
    compile('com.synisys.idm:auth-client:5.3.0')

    //shared concepts
    compile('com.synisys.idm:shared-concepts:1.7.21')

    compile('com.synisys.util:consul-client:1.2.0')

    //tracing
    compile('org.springframework.cloud:spring-cloud-starter-sleuth')

    //okhttp3
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.6.0'

    //log4j2 start
    compile group: 'org.apache.logging.log4j', name: 'log4j-api',version:'2.16.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core',version:'2.16.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api',version:'2.16.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-jcl',version:'2.16.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl',version:'2.16.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-jul',version:'2.16.0'
    //log4j2 end

    //monitoring
    compile group: 'io.prometheus', name: 'simpleclient', version: '0.6.0'
    compile group: 'io.prometheus', name: 'simpleclient_servlet', version: '0.6.0'
    compile group: 'io.prometheus', name: 'simpleclient_hotspot', version: '0.6.0'
    compile group: 'io.prometheus', name: 'simpleclient_guava', version: '0.6.0'
    compile group: 'io.prometheus', name: 'simpleclient_jetty', version: '0.6.0'
    compile group: 'io.prometheus', name: 'simpleclient_dropwizard', version: '0.6.0'

    compile group: 'com.synisys.skynet', name: 'skynet-bootstrap', version: '0.0.36'

    //spring boot
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-log4j2")

    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile('com.synisys.idm:entity-search-service-client:1.1.0'){
        exclude group: 'org.apache.logging.log4j'
        exclude module: 'skynet-shared-concepts'
    }

    compile(group: 'com.synisys.idm', name: 'kb-service-client', version: '3.10.3') {
        exclude(module: 'jsr311-api')
        exclude(module: 'skynet-shared-concepts')
    }

    compile('org.json:json:20160810')
    compile("com.synisys.skynet:common-security:3.0.0")

    //spring jdbc
    compile("org.springframework:spring-jdbc:4.3.4.RELEASE")
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.9'
    compile group: 'com.h2database', name: 'h2', version: '1.4.192'

    compile("com.synisys.idm:idm-export-api:1.0.6") {
        exclude(group: 'com.synisys.idm')
    }

    compile("com.synisys.idm:idm-um-client:0.8.0") {
        exclude(group: 'com.synisys.idm')
    }
    compile("com.synisys.idm:idm-um-api:2.12.0") {
        exclude(group: 'com.synisys.idm')
    }
    compile('com.synisys.idm:idm-notification-client:1.4.0') {
        exclude(group: 'com.synisys.idm')
    }
    compile('com.synisys.idm:idm-notification-api:1.1.0') {
        exclude(group: 'com.synisys.idm')
    }

    compile group: 'com.zaxxer', name: 'HikariCP', version: '3.4.2'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    //add local jar as dependency
    compile files('lib/EUSignJava.jar')

    compile('com.synisys.idm:idm-services-infrastructure-utils:1.2.0')
    compile('com.synisys.util:idm-services-messaging-client:4.5.2')

    compile('com.synisys.idm.multidatasource:idm-multidatasource-provider:1.6.0')
    compile('com.zaxxer:HikariCP:3.2.0')

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '2.2.6.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '2.2.6.RELEASE'
    compile group: 'redis.clients', name: 'jedis', version: '2.8.0'

    //swagger
    compile('io.springfox:springfox-swagger2:2.7.0')
    compile('io.springfox:springfox-swagger-ui:2.7.0')

    compile('com.synisys.idm:idm-um-api:2.12.0')
    compile("com.synisys.idm:idm-um-client:0.7.1")

    //rabbitmq
    compile group: 'com.rabbitmq', name: 'amqp-client', version: "5.8.0"

    //lock
    compile(group: 'com.synisys.idm', name: 'lock-management-api', version: '2.6.1') {
        exclude(module: 'skynet-shared-concepts')
    }
    compile(group: 'com.synisys.idm', name: 'lock-management-client', version: '2.6.1') {
        exclude(module: 'skynet-shared-concepts')
    }

    // resilience4j-retry
    compile group: 'io.github.resilience4j', name: 'resilience4j-retry', version: '1.4.0'
    compile group: 'io.github.resilience4j', name: 'resilience4j-core', version: '1.4.0'

    compile 'joda-time:joda-time:2.10.6'
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
}

configurations {
    compile.exclude group: 'ch.qos.logback'
    compile.exclude group: 'org.cfg4j'
    compile.exclude module: 'jsr311-api'
    compile.exclude module: 'spring-cloud-starter-consul-all'
    compile.exclude module: 'spring-cloud-consul-config'
    compile.exclude module: "spring-cloud-sleuth-zipkin"
}

applicationDefaultJvmArgs = [
        "-Xmx256m",
        "-Xms256m",
        "-XX:MetaspaceSize=150m",
        "-XX:MaxMetaspaceSize=150m",
        "-XX:ParallelGCThreads=1",
        "-XX:CICompilerCount=2",
        "-XX:MaxGCPauseMillis=300",
        "-Dlog4j.configurationFile=log4j2-kube.xml",
        "-Dinstall.path=/ssd-service/tmp-dir",
        "-XX:MaxDirectMemorySize=100m",
        "-XX:CompressedClassSpaceSize=150m",
        "-Xss512k",
        "-XX:+DisableExplicitGC"
]

docker {
    registryCredentials {
        url = 'regdb.synisys.com'
        username = project.secureUsername
        password = project.securePassword
        email = "vigen.vardanyan@synisys.com"
    }
}

nebulaDocker {
    dockerUrl = 'tcp://swarm-node1:2375'
    dockerRepo = [test: 'https://regdb.synisys.com', prod: 'https://regdb.synisys.com', dev: 'https://regdb.synisys.com']
    maintainerEmail = 'vigen.vardanyan@synisys.com'
    dockerBase = 'regdb.synisys.com/base/java/alp11/jre:8-231'
}



afterEvaluate { project ->
    docker {
        javaApplication {
            tag = "regdb.synisys.com/${project.group}/${project.applicationName}:${project.version}"
            ports = [8898]
        }
    }
    project.rootProject.tasks.final.finalizedBy project.tasks.getByName('dockerPushImage')
}

sonarqube {
}



